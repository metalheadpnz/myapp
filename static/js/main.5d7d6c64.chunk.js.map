{"version":3,"sources":["components/pokemonCard/pokemonCard.module.css","components/preloader/preloader.module.css","components/login/login.module.css","components/categories/categories.module.css","img/arrowBtn.svg","components/login/login.jsx","components/conform/conform.jsx","img/Arrow_mini.svg","components/preloader/preloader.jsx","components/categories/categories.jsx","components/pokemonCard/pokemonCard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","props","useState","login","pass","errorClass","state","setState","auth","to","className","styles","wrap","inputField","positionLoginField","htmlFor","label","id","type","input","value","onChange","event","target","positionPasswordField","name","arrowLoginBtn","src","onClick","setAuth","error","Conform","OTP","conform","useEffect","Math","floor","random","Preloader","preloader","Categories","isLoading","cards","setCards","axios","subtype","then","response","data","response2","types","subtypes","onSelected","wraper","header","logout","content","pannel","categorySelect","defaultValue","select","selected","disabled","hidden","map","item","categoryLabel","arrowMini","main","smallPic","imageUrl","alt","PokemonCard","window","location","pathname","split","card","back","contentContainer","leftPanel","bigPic","imgTest","imageUrlHiRes","attacks","description","text","infoPanel","join","hr","damage","cost","resistances","evolvesFrom","App","exact","path","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.5d7d6c64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"pokemonCard_wrap__1jxAe\",\"header\":\"pokemonCard_header__2PYvZ\",\"logout\":\"pokemonCard_logout__mD2rY\",\"back\":\"pokemonCard_back__2x9xN\",\"contentContainer\":\"pokemonCard_contentContainer__3jFym\",\"bigPic\":\"pokemonCard_bigPic__3AkYg\",\"infoPanel\":\"pokemonCard_infoPanel__20qhn\",\"hr\":\"pokemonCard_hr__10BWP\",\"flex\":\"pokemonCard_flex__3GVar\",\"description\":\"pokemonCard_description__U7sOP\",\"leftPanel\":\"pokemonCard_leftPanel__35mcw\",\"imgTest\":\"pokemonCard_imgTest__119Zp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__2wRU9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"login_wrap__1PgAK\",\"positionLoginField\":\"login_positionLoginField__fCjrg\",\"positionPasswordField\":\"login_positionPasswordField__2GGab\",\"inputField\":\"login_inputField__ahj1Z\",\"arrowLoginBtn\":\"login_arrowLoginBtn__2qk1X\",\"label\":\"login_label__VLxfk\",\"input\":\"login_input__1_RPq\",\"error\":\"login_error__3n9qT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wraper\":\"categories_wraper__1fDyF\",\"header\":\"categories_header__3sQNV\",\"pannel\":\"categories_pannel__1RQbd\",\"main\":\"categories_main__2M-Z1\",\"content\":\"categories_content__3QS33\",\"categorySelect\":\"categories_categorySelect__2TNP1\",\"type\":\"categories_type__1UnbN\",\"categoryLabel\":\"categories_categoryLabel__1uxuY\",\"arrowMini\":\"categories_arrowMini__dfCKB\",\"logout\":\"categories_logout__1nMBy\",\"select\":\"categories_select__2D8bG\",\"smallPic\":\"categories_smallPic__uaIq4\"};","export default __webpack_public_path__ + \"static/media/arrowBtn.c252fcc9.svg\";","import React, {useState} from 'react';\r\nimport styles from './login.module.css';\r\nimport arrowLoginBtn from '../../img/arrowBtn.svg'\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n    let [state, setState] = useState({\r\n        login: \"KODE\",\r\n        pass: \"123\",\r\n        errorClass: null\r\n    })\r\n\r\n    function updatePass(event) {\r\n        setState({...state, pass: event.target.value})\r\n    }\r\n\r\n    function updateLogin(event) {\r\n        setState({...state, login: event.target.value})\r\n    }\r\n\r\n    let loginOnClick = () => {\r\n        if (state.login == \"KODE\" && state.pass == 123) {\r\n            setState({...state, errorClass: null})\r\n            props.setAuth(true)\r\n        }\r\n        else {\r\n            setState({...state, errorClass: styles.error})\r\n        }\r\n    }\r\n    if (props.auth) return <Redirect to={\"/conform\"}/>\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.wrap}>\r\n                <div className={`${styles.inputField} ${styles.positionLoginField} ${state.errorClass}`}>\r\n                    <label htmlFor=\"login\" className={styles.label}>Login</label>\r\n                    <input id=\"login\" type=\"text\" className={styles.input} value={state.login} onChange={updateLogin}/>\r\n                </div>\r\n                <div className={`${styles.inputField} ${styles.positionPasswordField} ${state.errorClass}`}>\r\n                    <label htmlFor=\"pass\" className={styles.label}>Password</label>\r\n                    <input type=\"password\" name=\"пароль\" id=\"pass\" className={styles.input} value={state.pass}\r\n                           onChange={updatePass}/>\r\n                </div>\r\n                <img className={styles.arrowLoginBtn} src={arrowLoginBtn} onClick={loginOnClick}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"../login/login.module.css\";\r\nimport arrowLoginBtn from \"../../img/arrowBtn.svg\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nfunction Conform(props) {\r\n\r\n    function createOTP() {\r\n        return Math.floor(1000 + Math.random() * (9999 + 1 - 1000))\r\n    }\r\n\r\n    function OTPOnClick() {\r\n        if (state.input == state.OTP) {\r\n            setState({\r\n                ...state, conform: true, errorClass: null\r\n            })\r\n\r\n        } else {\r\n            setState({...state, errorClass: styles.error})\r\n        }\r\n    }\r\n\r\n    function onInputChange(event) {\r\n        setState({...state, input: event.target.value})\r\n    }\r\n\r\n    let [state, setState] = useState({\r\n        OTP: 9999,\r\n        input: \"\",\r\n        conform: false,\r\n        errorClass: null\r\n    });\r\n\r\n    useEffect(() => {\r\n            // createOTP();\r\n            setState({...state, OTP: createOTP()});\r\n        }, []\r\n    )\r\n\r\n    if (state.conform) return <Redirect to={\"/categories\"}/>\r\n    if (!props.auth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.wrap}>\r\n                <div className={`${styles.inputField} ${styles.positionLoginField} ${state.errorClass}`}>\r\n                    <label htmlFor=\"login\" className={styles.label}>Code from SMS {state.OTP}</label>\r\n                    <input id=\"login\" type=\"text\" className={styles.input} value={state.input}\r\n                           onChange={onInputChange}/>\r\n                </div>\r\n                <img className={styles.arrowLoginBtn} src={arrowLoginBtn} onClick={OTPOnClick}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Conform;","export default __webpack_public_path__ + \"static/media/Arrow_mini.82384630.svg\";","import React from \"react\";\r\nimport styles from \"./preloader.module.css\"\r\n\r\nfunction Preloader() {\r\nreturn (\r\n    <h2 className={styles.preloader}>\r\n        LOADING\r\n    </h2>\r\n)\r\n}\r\n\r\nexport default Preloader;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./categories.module.css\";\r\nimport arrowMini from \"../../img/Arrow_mini.svg\"\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport * as axios from \"axios\";\r\n\r\nfunction Categories(props) {\r\n    let [state, setState] = useState({isLoading: true})\r\n    let [cards, setCards] = useState([]);\r\n\r\n    useEffect(getPokemonsCards, [state.type, state.subtype])\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://api.pokemontcg.io/v1/types\").then(response => {\r\n            axios.get(\"https://api.pokemontcg.io/v1/subtypes\").then(response2 => {\r\n                setState({\r\n                    ...state,\r\n                    types: response.data.types,\r\n                    subtypes: response2.data.subtypes,\r\n                    isLoading: false\r\n                });\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    if (!props.auth) return <Redirect to={\"/login\"}/>\r\n\r\n    function logout() {\r\n        props.setAuth(false)\r\n    }\r\n\r\n    function getPokemonsCards() {\r\n        axios.get(`https://api.pokemontcg.io/v1/cards?types=${state.type ? state.type : \"\"}&subtype=${state.subtype ? state.subtype : \"\"}`).then(response => {\r\n            setCards(response.data.cards)\r\n        })\r\n    }\r\n\r\n\r\n    function onSelected(event) {\r\n        setState({...state, [event.target.name]: event.target.value});\r\n    }\r\n\r\n    if (state.isLoading) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={styles.wraper}>\r\n\r\n                <header className={styles.header}>\r\n                    <div className={styles.logout} onClick={logout}>\r\n                        Logout\r\n                    </div>\r\n                </header>\r\n                <div className={styles.content}>\r\n                    <div className={styles.pannel}>\r\n                        <div className={`${styles.categorySelect} ${styles.type}`}>\r\n                            <select name=\"type\" id=\"\" defaultValue=\"\" className={styles.select} onChange={onSelected}>\r\n                                <option value=\"\" selected disabled hidden>Type</option>\r\n                                {state.types.map((item) => <option value={item} key={item}>{item}</option>)}\r\n                            </select>\r\n                            <span className={styles.categoryLabel}>\r\n                                <img src={arrowMini} className={styles.arrowMini}/>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className={styles.categorySelect}>\r\n                            <select name=\"subtype\" id=\"\" defaultValue=\"\" className={styles.select}\r\n                                    onChange={onSelected}>\r\n                                <option value=\"\" selected disabled hidden>Subtype</option>\r\n                                {state.subtypes.map((item) => <option value={item} key={item}>{item}</option>)}\r\n                            </select>\r\n                            <span className={styles.categoryLabel}>\r\n                                <img src={arrowMini} className={styles.arrowMini}/>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.main}>\r\n                        {cards.map((item) => <NavLink key={item.id} to={`/card/${item.id}`}><img\r\n                            className={styles.smallPic} key={item.id} src={item.imageUrl} alt=\"\"/></NavLink>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Categories;","import React, {useEffect, useState} from \"react\";\r\nimport styles from \"./pokemonCard.module.css\";\r\nimport * as axios from \"axios\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\n\r\n\r\nfunction PokemonCard(props) {\r\n    let id = window.location.pathname.split('d/')[1]\r\n\r\n    let [state, setState] = useState({isLoading: true})\r\n    useEffect(() => {\r\n        axios.get(`https://api.pokemontcg.io/v1/cards/${id?id:\"dp6-90\"}`).then(response => {\r\n            setState({...state, card: response.data.card, isLoading: false});\r\n        })\r\n    }, [])\r\n\r\n    function logout() {\r\n        props.setAuth(false)\r\n    }\r\n\r\n    if (!props.auth) return <Redirect to={\"/login\"}/>\r\n\r\n    if (state.isLoading) {\r\n        return (\r\n            <Preloader/>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className={styles.wrap}>\r\n                <header className={styles.header}>\r\n                    <NavLink className={styles.back} to={\"/categories\"}>{\"<\"} Back</NavLink>\r\n                    <div className={styles.logout} onClick={logout}>Logout</div>\r\n                </header>\r\n                <div className={styles.contentContainer}>\r\n                    <div className={styles.leftPanel}>\r\n                        <div className={styles.bigPic}><img className={styles.imgTest} src={state.card.imageUrlHiRes}\r\n                                                            alt=\"\"/></div>\r\n                        {state.card.attacks?\r\n                            state.card.attacks.map((item) => <div className={styles.description}\r\n                                                               key={item.name}>{item.text}</div>):\"error\"}\r\n                    </div>\r\n                    <div className={styles.infoPanel}>\r\n                        Pokemon name: {state.card.name}\r\n                        <br/>\r\n                        Type: {state.card.types?state.card.types.join(' '):\"error\"}\r\n                        <br/>\r\n                        SubType: {state.card.subtype}\r\n                        <hr className={styles.hr}/>\r\n                        attackDamage: {state.card.attacks?state.card.attacks[0].damage:\"error\"}\r\n                        <br/>\r\n                        attackCost: {state.card.attacks?state.card.attacks[0].cost:\"error\"}\r\n                        <br/>\r\n                        resistances: {state.card.resistances\r\n                        ? state.card.resistances.map((item) => <span key={item.type}>{item.type}</span>)\r\n                        : <span>none</span>}\r\n                        <br/>\r\n                        evolvesFrom: {state.card.evolvesFrom}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PokemonCard;","import React, {useState} from 'react';\r\nimport './App.css';\r\nimport Login from \"./components/login/login\";\r\nimport Conform from \"./components/conform/conform\";\r\nimport Categories from \"./components/categories/categories\";\r\nimport PokemonCard from \"./components/pokemonCard/pokemonCard\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n    const [auth, setAuth] = useState(false)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Route exact path='/myapp' render={() => <Login auth={auth} setAuth={setAuth}/>}/>\r\n            <Route path='/login' render={() => <Login auth={auth} setAuth={setAuth}/>}/>\r\n            <Route path='/conform' render={() => <Conform auth={auth} setAuth={setAuth}/>}/>\r\n            <Route path='/categories' render={() => <Categories auth={auth} setAuth={setAuth}/>}/>\r\n            <Route path='/card' render={() => <PokemonCard auth={auth} setAuth={setAuth}/>}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}